# lithoscan-bootstrap.ps1
# Bootstrap script for Windows: Installs Rust, Git, Npcap, clones/builds lithoscan, downloads oui.csv, and runs scan

# 1. Install Rust if needed (official latest installer)
if (-not (Get-Command rustc -ErrorAction SilentlyContinue)) {
    Write-Host "Installing Rust toolchain..."
    $rustInstaller = "$env:TEMP\rustup-init.exe"
    Invoke-WebRequest -Uri "https://win.rustup.rs/" -OutFile $rustInstaller
    Start-Process -FilePath $rustInstaller -Wait
}

# 2. Install Git for Windows if needed (latest release)
if (-not (Get-Command git -ErrorAction SilentlyContinue)) {
    Write-Host "Installing Git for Windows..."
    $gitUrl = "https://github.com/git-for-windows/git/releases/latest/download/Git-64.exe"
    $gitPath = "$env:TEMP\git-installer.exe"
    Invoke-WebRequest $gitUrl -OutFile $gitPath
    Start-Process $gitPath -ArgumentList "/VERYSILENT" -Wait
    $env:Path += ";C:\Program Files\Git\cmd"
}

# 3. Install Npcap if needed (stable "npcap-installer.exe" redirect)
function Test-Npcap {
    $reg = "HKLM:\SYSTEM\CurrentControlSet\Services\npcap"
    return Test-Path $reg
}
if (-not (Test-Npcap)) {
    Write-Host "Npcap not found. Downloading and installing Npcap..."
    $npcapUrl = "https://npcap.com/dist/npcap-installer.exe"
    $npcapPath = "$env:TEMP\npcap-setup.exe"
    Invoke-WebRequest $npcapUrl -OutFile $npcapPath
    Start-Process $npcapPath -ArgumentList "/S" -Wait
}

# 4. Clone or update repo
$repoUrl = "https://github.com/nstone-lithos/lithoscan.git"
$repoDir = "$env:TEMP\lithoscan"
if (-not (Test-Path $repoDir)) {
    git clone $repoUrl $repoDir
} else {
    Set-Location $repoDir
    git pull
}

# 5. Download oui.csv from stable IEEE URL
$ouiUrl = "https://standards-oui.ieee.org/oui/oui.csv"
$ouiPath = "$repoDir\oui.csv"
if (-not (Test-Path $ouiPath)) {
    Invoke-WebRequest $ouiUrl -OutFile $ouiPath
}

# 6. Build project (release mode)
Set-Location $repoDir
cargo build --release

# 7. Prompt for args and run
Write-Host "Enter interface name (e.g. Ethernet):"
$iface = Read-Host
Write-Host "Enter CIDR (e.g. 192.168.1.0/24):"
$cidr = Read-Host
& "$repoDir\target\release\lithoscan.exe" arp-scan --iface $iface --cidr $cidr

Write-Host "`nDone. Press any key to exit."
$x = $host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
